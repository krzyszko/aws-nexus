{
  "Parameters" : {
    "KeyName": {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "255",
      "AllowedPattern" : "^[a-zA-Z0-9\\-]*$"
    },
    "Image": {
      "Description" : "Name of an existing EC2 image",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "20",
      "AllowedPattern" : "^[a-zA-Z0-9\\-]*$"
    },
    "NexusImage": {
      "Description" : "Name of an existing Nexus EC2 image",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "20",
      "AllowedPattern" : "^[a-zA-Z0-9\\-]*$"
    }
  },
  "Mappings" : {
  },

  "Resources": {
    "NexusVpc": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "172.35.0.0/16",
        "EnableDnsSupport": true,
        "EnableDnsHostnames": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "NexusVpc"
          }
        ]
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway"
    },
    "PublicInternetRoute": {
      "Type": "AWS::EC2::Route",
      "DependsOn": [
        "InternetGateway",
        "PublicInternetRouteTable"
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "InternetGateway"
        },
        "RouteTableId": {
          "Ref": "PublicInternetRouteTable"
        }
      }
    },
    "VpcGatewayAttachment": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "InternetGatewayId": {
          "Ref": "InternetGateway"
        },
        "VpcId": {
          "Ref": "NexusVpc"
        }
      }
    },
    "PublicInternetRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "NexusVpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "DefaultInternetRouteTable"
          }
        ]
      }
    },
    "NatInternetRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "NexusVpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "NatInternetRouteTable"
          }
        ]
      }
    },
    "NatInternetRoute": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "NatGateway"
        },
        "RouteTableId": {
          "Ref": "NatInternetRouteTable"
        }
      }
    },
    "PublicSubnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            "0",
            {
              "Fn::GetAZs": {
                "Ref": "AWS::Region"
              }
            }
          ]
        },
        "CidrBlock": "172.35.0.0/24",
        "VpcId": {
          "Ref": "NexusVpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "PublicSubnet"
          }
        ]
      }
    },
    "NexusSubnet1routetableassociation" : {
       "Type" : "AWS::EC2::SubnetRouteTableAssociation",
       "Properties" : {
          "SubnetId" : { "Ref" : "NexusSubnet1" },
          "RouteTableId" : { "Ref" : "NatInternetRouteTable" }
       }
    },
    "NexusSubnet2routetableassociation" : {
    "Type" : "AWS::EC2::SubnetRouteTableAssociation",
    "Properties": {
    "SubnetId": {"Ref" : "NexusSubnet2"},
    "RouteTableId": {"Ref": "NatInternetRouteTable"}
    }
    },
    "PublicSubnetroutetableassociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "PublicInternetRouteTable"
        },
        "SubnetId": {
          "Ref": "PublicSubnet"
        }
      }
    },
    "NexusPublicSubnet1RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "PublicInternetRouteTable"
        },
        "SubnetId": {
          "Ref": "NexusPublicSubnet1"
        }
      }
    },
    "NexusPublicSubnet2RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "PublicInternetRouteTable"
        },
        "SubnetId": {
          "Ref": "NexusPublicSubnet2"
        }
      }
    },
    "NexusSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            "1",
            {
              "Fn::GetAZs": {
                "Ref": "AWS::Region"
              }
            }
          ]
        },
        "CidrBlock": "172.35.1.0/24",
        "VpcId": {
          "Ref": "NexusVpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Nexus private subnet"
          } ]
      }
    },
    "NexusSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            "2",
            {
              "Fn::GetAZs": {
                "Ref": "AWS::Region"
              }
            }
          ]
        },
        "CidrBlock": "172.35.2.0/24",
        "VpcId": {
          "Ref": "NexusVpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Nexus private subnet"
          } ]

      }
    },
    "NexusPublicSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            "1",
            {
              "Fn::GetAZs": {
                "Ref": "AWS::Region"
              }
            }
          ]
        },
        "CidrBlock": "172.35.101.0/27",
        "VpcId": {
          "Ref": "NexusVpc"
        }
      }
    },
    "NexusPublicSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            "2",
            {
              "Fn::GetAZs": {
                "Ref": "AWS::Region"
              }
            }
          ]
        },
        "CidrBlock": "172.35.102.0/27",
        "VpcId": {
          "Ref": "NexusVpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Nexus public subnet"
          } ]

      }
    },
    "ElasticLoadBalancer": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "DependsOn": [ "InternetGateway" ],
      "Properties": {
        "SecurityGroups": [ { "Ref": "LoadBalancerSecurityGroup" } ],
        "Subnets": [ { "Ref": "NexusPublicSubnet1" }, { "Ref": "NexusPublicSubnet2" } ],
          "Listeners": [
          {
            "LoadBalancerPort": "80",
            "InstancePort": "8081",
            "Protocol": "TCP"
          }
        ],
        "HealthCheck": {
          "Target": {
            "Fn::Join": [
              "",
              [
                "HTTP:",
                "8081",
                "/index.html"
              ]
            ]
          },
          "HealthyThreshold": "3",
          "UnhealthyThreshold": "5",
          "Interval": "5",
          "Timeout": "4"
        },
      "Tags": [
          {
            "Key": "Name",
            "Value": "Internet Facing load balancer subnet"
          } ]
      }
    },
    "NexusGroup": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "DependsOn": [
        "NexusFileSystem",
        "MountTargetSecurityGroup",
        "NexusMountTarget2",
        "NexusMountTarget1"
      ],
      "Properties": {
        "AvailabilityZones": [ {
          "Fn::Select": [
            "1",
            {
              "Fn::GetAZs": {
                "Ref": "AWS::Region"
              }
            }
          ]
        }, {
          "Fn::Select": [
            "2",
            {
              "Fn::GetAZs": {
                "Ref": "AWS::Region"
              }
            }
          ]
        } ],
        "VPCZoneIdentifier": [ { "Ref": "NexusSubnet1" }, {"Ref": "NexusSubnet2" } ],
        "LaunchConfigurationName": {
          "Ref": "NexusLaunchConfig"
        },
        "MinSize": "1",
        "MaxSize": "1",
        "HealthCheckGracePeriod": "300",
        "LoadBalancerNames": [
          {
            "Ref": "ElasticLoadBalancer"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "Nexus scaling group",
            "PropagateAtLaunch": false
          } ]

      }
    },
   "BastionSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
          "Ref": "NexusVpc"
        },
        "GroupDescription": "Ssh access to bastion node.",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "Bastion security group"
          } ]
      }
    },
    "NexusSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
          "Ref": "NexusVpc"
        },
        "GroupDescription": "Ssh access to nexus node.",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "172.35.0.0/16"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "8081",
            "ToPort": "8081",
            "CidrIp": "172.35.0.0/16"
          }
        ],
       "Tags": [
          {
            "Key": "Name",
            "Value": "Nexus security group"
          } ]
      }
    },
    "LoadBalancerSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
          "Ref": "NexusVpc"
        },
        "GroupDescription": "Http access to load balancer.",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },
    "MountTargetSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
          "Ref": "NexusVpc"
        },
        "GroupDescription": "NFS access to a mount target.",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "2049",
            "ToPort": "2049",
            "CidrIp": "172.35.0.0/16"
          }
        ],
       "Tags": [
          {
            "Key": "Name",
            "Value": "Nexus mount target security group"
          } ]
      }
    },
    "BastionInstance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "ImageId": {
          "Ref" : "Image"
        },
        "KeyName": {
          "Ref" : "KeyName"
        },
        "SecurityGroupIds": [
          {
            "Ref": "BastionSecurityGroup"
          }
        ],
        "SubnetId": {
          "Ref": "PublicSubnet"
        },
        "InstanceType": "t2.micro",
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": "nfsDNS : ${NexusFileSystem}.efs.${AWS::Region}.amazonaws.com"
          }
        }
      }
    },
    "IpAddress": {
      "Type": "AWS::EC2::EIP",
      "DependsOn": "VpcGatewayAttachment",
      "Properties": {
        "Domain": "vpc",
        "InstanceId": {
          "Ref": "BastionInstance"
        }
      }
    },
    "NatIpAddress": {
      "Type": "AWS::EC2::EIP",
      "DependsOn": "VpcGatewayAttachment",
      "Properties": {
        "Domain": "vpc"
      }
    },
    "NexusLaunchConfig": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "KeyName": {
          "Ref": "KeyName"
        },
        "ImageId": {
          "Ref" : "NexusImage"
        },
        "SecurityGroups": [
          {
            "Ref": "NexusSecurityGroup"
          }
        ],
        "InstanceType": "t2.medium",
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": "nfsDNS : ${NexusFileSystem}.efs.${AWS::Region}.amazonaws.com"
          }
        }
      }
    },
    "NexusFileSystem": {
        "Type": "AWS::EFS::FileSystem",
        "Properties": {
          "Encrypted": false,
          "FileSystemTags": []
        }
      },
    "NexusMountTarget1": {
      "Type": "AWS::EFS::MountTarget",
      "Properties": {
        "FileSystemId": {
          "Ref": "NexusFileSystem"
        },
        "SubnetId": {
          "Ref": "NexusSubnet1"
        },
        "SecurityGroups": [
          {
            "Ref": "MountTargetSecurityGroup"
          }
        ]
      }
    },
    "NexusMountTarget2": {
      "Type": "AWS::EFS::MountTarget",
      "Properties": {
        "FileSystemId": {
          "Ref": "NexusFileSystem"
        },
        "SubnetId": {
          "Ref": "NexusSubnet2"
        },
        "SecurityGroups": [
          {
            "Ref": "MountTargetSecurityGroup"
          }
        ]
      }
    },
    "NatGateway" : {
      "DependsOn" : "VpcGatewayAttachment",
      "Type" : "AWS::EC2::NatGateway",
      "Properties" : {
        "AllocationId" : { "Fn::GetAtt" : ["NatIpAddress", "AllocationId"]},
        "SubnetId" : { "Ref" : "PublicSubnet" }
      }
    }
  },
  "Outputs" : {
    "LoadBalancerDNS": {
      "Description": "LoadBalancerDNSName",
      "Value": { "Fn::GetAtt" : [ "ElasticLoadBalancer" , "DNSName" ] }
    }
  }
}